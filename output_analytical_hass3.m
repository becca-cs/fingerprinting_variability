function [P,C,A] = output_analytical_hass3(freq,f,c,lam,gam,alph,r_flg)
    % Generates power spectra, coherence with global temperature, and
    % temperature variance for 3-box model
    % INPUTS 
    %   freq    : frequencies to evaluate; N x 1 array 
    %   f       : f(1) standard deviation of radiative anomalies in 
    %               extratropical Southern Hemisphere box 
    %             f(2) standard deviation of radiative anomalies in 
    %               tropical box 
    %             f(3) standard deviation of radiative anomalies in 
    %               extratropical Northern Hemisphere box 
    %             f(4) standard deviation of globally coherent radiative 
    %               anomalies
    %             Units are [W m^-2]
    %   c       : ocean heat capacity [W m^-2 K^-1 yr^-1]
    %   lam     : climate feedback strength; should be positive [W m^-2 K^-1]
    %   gam     : coupling parameter, determined by diffusivity [W m^-2 K^-1]
    %   alph    : moisture constant. Setting > 1 allows for preferential
    %           transport of energy from tropics to extratropics. In
    %           current climatology, this value is ~1.7.
    %   r_flg   : lag-1 correlation coefficient for globally coherent
    %               radiative anomalies. If 0, global noise is white.
    % OUTPUTS
    %   P   : N x 5 array. P(:,1) is degrees of freedom; P(:,2:4) are power
    %           spectra in boxes 1-3; P(:,5) is power spectrum of global 
    %           mean temp
    %   C   : coherence with global temp. Currently, set up only to output 
    %           coherence for boxes 1 and 2.
    %   A   : spatial pattern of standard deviation of temperature 
    %           (approximation)

w = freq*2*pi; % transform into omega
f1 = f(1); f2 = f(2); f3 = f(3);

if r_flg==0 % global noise is white
    fg = f(4);
    FG = fg./lam;
else % global noise is red
    r = r_flg; T = 1/r;
    fg = (f(4)./lam).^2*2*T./(1+w.^2*T^2);
    FG = sqrt(fg);
end

% normalize everything
W = w*c/lam;
GAM = gam/lam;
F1 = f1./lam; F2 = f2./lam; F3 = f3./lam;

d = ((W.^2+1).*((2*GAM*alph+GAM+1).^2+W.^2).*(W.^2+(GAM+1)^2));
a = ((2*GAM*alph+GAM+1).^2+W.^2);
b = W.^2+(GAM+1)^2;
c = (W.^2+1);

%% POWER SPECTRA

% power spectrum, box 2 (tropics)
PT2t = (GAM^2*(F1.^2+F3.^2)+((3*GAM+1)^2+W.^2).*(FG.^2)+((GAM+1).^2+W.^2)*F2.^2)./(a.*c);

% power spectrum, box 1 (SH extratropics)
PT1t = F1.^2*((GAM^2*alph+2*alph*GAM+GAM+1).^2+W.^4+W.^2*((4*alph^2+2*alph+1)*...
    GAM^2+(4*alph+2)*GAM+2))./d...
    + F2.^2*(GAM^2*alph^2*((GAM+1).^2+W.^2))./d ...
    +F3.^2*(GAM^4*alph^2)./d + ...
    FG.^2.*(((3*GAM*alph+1).^2+W.^2).*((GAM+1).^2+W.^2))./d; 

% power spectrum, box 3 (NH extratropics)
PT3t = F3.^2*((GAM^2*alph+2*alph*GAM+GAM+1).^2+W.^4+W.^2*((4*alph^2+2*alph+1)*...
    GAM^2+(4*alph+2)*GAM+2))./d...
    + F2.^2*(GAM^2*alph^2*((GAM+1).^2+W.^2))./d ...
    +F1.^2*(GAM^4*alph^2)./d + ...
    FG.^2.*(((3*GAM*alph+1).^2+W.^2).*((GAM+1).^2+W.^2))./d;

d2 = (W.^2+1).*((2*GAM*alph+GAM+1).^2*W.^2);

% power spectrum of GMST
PTgt = (F1.^2+F3.^2).*(W.^2+(1+2*(1+alph)*GAM).^2)./(16*(1+W.^2).*(W.^2+(1+GAM+2*alph*GAM).^2)) +...
    (F2.^2)*(W.^2+(1+GAM+alph*GAM).^2)./(4*(1+W.^2).*(W.^2+(1+GAM+2*alph*GAM).^2)) +...
    FG.^2.*(4.*W.^2+(2+3*(1+alph)*GAM).^2)./(4*(W.^2+1).*(W.^2+(1+GAM+2*alph*GAM).^2));


%% COHERENCE

I = sqrt(-1);
XY1 = F1.*((1+alph*GAM.^2./((1+GAM-I*W).*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM-I*W)-I*W)))./(1+GAM-...
        I*W)).*...
        1/4*F1.*((1+(alph*GAM.^2)./((1+GAM+I*W).*(1+2*alph*GAM-...
        (2*alph*GAM^2)./(1+GAM+I*W)+I*W)))./(1+GAM+I*W)+...
        (alph*GAM^2)./((1+GAM+I*W).^2.*(1+2*alph*GAM-...
        (2*alph*GAM.^2)./(1+GAM+I*W)+I*W))+...
        (2*GAM)./((1 +GAM + I*W).*(1 + 2*alph*GAM - ...
        (2*alph*GAM.^2)./(1 + GAM+ I*W) + I*W))) +...
    F2*(alph*GAM)./((1+GAM-I*W).*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM-I*W)-...
        I*W)).*...
        1/4*F2.*(2./(1+2*alph*GAM-(2*alph*GAM.^2)./(1 + GAM + I*W) + ...
        I*W) + (2*alph*GAM)./((1 + GAM + I*W).*(1 + 2*alph*GAM - ...
        (2*alph*GAM.^2)./(1+GAM+I*W)+I*W)))+...
    F3*alph*GAM.^2./((1+GAM-I*W).^2.*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM-I*W)-I*W)).*...
        1/4*F3.*((1+alph*GAM.^2./((1+GAM+I*W).*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM+I*W)+I*W)))./(1+GAM+I*W)+...
        alph*GAM^2./((1+GAM+I*W).^2.*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM+I*W)+I*W))...
        +2*GAM./((1+GAM+I*W).*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM+I*W)+I*W)))+...
    FG.*(((1+(alph*GAM*(1+(2*GAM)./(1+GAM-I*W)))./(1+2*alph*GAM-(2*alph*GAM.^2)./(1+GAM-I*W)-I*W)))./(1 + ...
        GAM -I*W)).*...
        1/4.*FG.*((2*(1+(alph*GAM*(1+(2*GAM)./(1 +GAM+ I*W)))./...
        (1 + 2*alph*GAM-(2*alph*GAM^2)./(1 + GAM+ I*W) + I*W)))./(1 + GAM+ I*W) ...
        + (2*(1 + (2 *GAM)./(1 + GAM + I*W)))./(1 + 2*alph*GAM - ...
        (2*alph*GAM.^2)./(1 +GAM+ I*W) + I*W));

XY2 = F1*(GAM./((1 + GAM- I*W).*(1 + 2*alph*GAM - ...
        (2 *alph*GAM.^2)./(1 + GAM - I*W) - I*W))).*...
        1/4*F1.*((1+(alph*GAM.^2)./((1+GAM+I*W).*(1+2*alph*GAM-...
        (2*alph*GAM^2)./(1+GAM+I*W)+I*W)))./(1+GAM+I*W)+...
        (alph*GAM^2)./((1+GAM+I*W).^2.*(1+2*alph*GAM-...
        (2*alph*GAM.^2)./(1+GAM+I*W)+I*W))+...
        (2*GAM)./((1 +GAM + I*W).*(1 + 2*alph*GAM - ...
        (2*alph*GAM.^2)./(1 + GAM+ I*W) + I*W))) +...
     F2./(1 + 2*alph*GAM-(2*alph*GAM^2)./(1 + GAM- I*W) -I*W).*...
        1/4*F2.*(2./(1+2*alph*GAM-(2*alph*GAM.^2)./(1 + GAM + I*W) + ...
        I*W) + (2*alph*GAM)./((1 + GAM + I*W).*(1 + 2*alph*GAM - ...
        (2*alph*GAM.^2)./(1+GAM+I*W)+I*W)))+...
     F3.*(GAM)./((1 + GAM- I*W).*(1 + 2*alph*GAM - ...
        (2*alph*GAM.^2)./(1 + GAM- I*W) - I*W)).*...
        1/4*F3.*((1+alph*GAM.^2./((1+GAM+I*W).*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM+I*W)+I*W)))./(1+GAM+I*W)+...
        alph*GAM^2./((1+GAM+I*W).^2.*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM+I*W)+I*W))...
        +2*GAM./((1+GAM+I*W).*(1+2*alph*GAM-2*alph*GAM.^2./(1+GAM+I*W)+I*W)))+...
     FG.*((1 + (2*GAM)./(1 +GAM-I*W)))./(1 + 2*alph*GAM - ...
        (2 *alph*GAM.^2)./(1 + GAM- I*W) - I*W).*...
        1/4.*FG.*((2*(1+(alph*GAM*(1+(2*GAM)./(1 +GAM+ I*W)))./...
        (1 + 2*alph*GAM-(2*alph*GAM^2)./(1 + GAM+ I*W) + I*W)))./(1 + GAM+ I*W) ...
        + (2*(1 + (2 *GAM)./(1 + GAM + I*W)))./(1 + 2*alph*GAM - ...
        (2*alph*GAM.^2)./(1 +GAM+ I*W) + I*W));

C1t = XY1./sqrt(PT1t.*PTgt); % coherence, extratropics
C2t = XY2./sqrt(PT2t.*PTgt); % coherence, tropics

meanPTt = (0.5*PT2t+0.25*PT1t+0.25*PT3t);

DOFt = meanPTt./PTgt;

PolarVar = trapz(freq,PT1t);
TropVar = trapz(freq,PT2t);
MeanVar = trapz(freq,PTgt);

% package everything
P = [DOFt(:),PT1t(:),PT2t(:),PT3t(:),PTgt(:)]; P = P';
C = real([C1t(:),C2t(:)]); C = C';
A = sqrt(2*[MeanVar,PolarVar,TropVar]);

end